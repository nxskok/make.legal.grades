% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun1.R
\name{makelegal}
\alias{makelegal}
\title{adjust grades to be "legal", not one short of a letter grade boundary}
\usage{
makelegal(x, nogood = make.legal.grades::grade_boundaries$number_grade -
  1, fudge = 0)
}
\arguments{
\item{x}{vector of decimal grades (on scale to be reported)}

\item{nogood}{vector of grades not to be awarded}

\item{fudge}{fudge factor (see Details)}
}
\description{
Convert possibly decimal grades to integers not in a forbidden set, which can be specied by the user, with optional "fudge factor" (see Details)
}
\details{
Default \code{nogood} are grades one below a GPA boundary at University of Toronto. My standard practice is to say that anything
that would round to one less than a grade boundary goes down to the next integer below (ie. 79.6 rounds up to 80, but 79.4
rounds to 79 and is rounded one more down to 78). If you prefer some other behaviour, adjust \code{fudge} appropriately. For example,
\code{fudge=0.5} would round anything bigger than 79 up to 80, \code{fudge=-0.5} would round anything less than 80 down, and a tiny
adjustment like \code{fudge=0.01} would give students just below 79 a chance to receive 80.
}
\examples{
makelegal(c(79.6, 79.4))
makelegal(79.4, fudge=0.5)
makelegal(c(81.4, 79.4), nogood=81)

}
